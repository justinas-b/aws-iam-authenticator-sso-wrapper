name: CI (app)

on:
  pull_request:
    paths-ignore:
      - 'chart/**'
  schedule:
    - cron: '0 8 1 * *'

permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  golangci-lint:
    name: Go lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Check for Go files
        id: files
        run: |  
          if find . -name '*.go' | grep .; then
            echo "go_files_exists=true" >> $GITHUB_OUTPUT
          else
            echo "go_files_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: golangci-lint
        if: ${{ steps.files.outputs.go_files_exists == 'true' }}
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
      - uses: actions/upload-artifact@v4  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: golangci-lint-test-results
          path: lint-report.xml
  test:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Tidy modules
        run: go mod tidy
      - name: Run Tests
        run: |
          go test -race -v -coverprofile=coverage.txt -covermode=atomic ./...
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  build:
    name: Go build
    runs-on: ubuntu-latest
    needs: [golangci-lint, test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Basic build of the project
        run: |
          go build .
